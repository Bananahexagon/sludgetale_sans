const P=(t,i)=>{const d=(a,h,r)=>{a()?(t(),h(),i(),requestAnimationFrame(()=>d(a,h,r))):r()},w=(a,h)=>new Promise(r=>{d(a,h,r)}),n=(a,h,r,p)=>{a(r)?(t(),h(r),i(),requestAnimationFrame(()=>n(a,h,r+1,p))):p()},s=(a,h,r)=>new Promise(p=>{n(h,r,a,p)}),l=a=>{t(),a(),i(),requestAnimationFrame(()=>l(a))};return{frameWhile:w,frameFor:s,frameLoop:l}},A=[{type:"image",name:"soul",src:"./assets/images/soul.png"},{type:"image",name:"soul_blue",src:"./assets/images/soul_blue.png"},{type:"image",name:"commands",src:"./assets/images/commands.png"},{type:"image",name:"back",src:"./assets/images/back.png"},{type:"image",name:"sans",src:"./assets/images/sans.png"},{type:"image",name:"hp_kr_purple",src:"./assets/images/hp_kr_purple.png"},{type:"image",name:"determination_white",src:"./assets/images/font/determination_white.png"},{type:"image",name:"determination_red",src:"./assets/images/font/determination_red.png"},{type:"image",name:"determination_orange",src:"./assets/images/font/determination_orange.png"},{type:"image",name:"determination_blue",src:"./assets/images/font/determination_blue.png"},{type:"image",name:"determination_yellow",src:"./assets/images/font/determination_yellow.png"},{type:"image",name:"determination_black",src:"./assets/images/font/determination_black.png"},{type:"image",name:"status_white",src:"./assets/images/font/status_white.png"},{type:"image",name:"status_red",src:"./assets/images/font/status_red.png"},{type:"image",name:"status_orange",src:"./assets/images/font/status_orange.png"},{type:"image",name:"status_blue",src:"./assets/images/font/status_blue.png"},{type:"image",name:"status_yellow",src:"./assets/images/font/status_yellow.png"},{type:"image",name:"status_purple",src:"./assets/images/font/status_purple.png"},{type:"image",name:"kr_white",src:"./assets/images/kr_white.png"},{type:"image",name:"hp_white",src:"./assets/images/hp_white.png"},{type:"image",name:"bone_head_white",src:"./assets/images/bone_head_white.png"},{type:"image",name:"bananahexagon",src:"./assets/images/normal_icon.png"},{type:"image",name:"death_0",src:"./assets/images/death_0.png"},{type:"image",name:"death_1",src:"./assets/images/death_1.png"},{type:"image",name:"death_2",src:"./assets/images/death_2.png"},{type:"image",name:"death_3",src:"./assets/images/death_3.png"},{type:"image",name:"death_4",src:"./assets/images/death_4.png"},{type:"image",name:"gb_1",src:"./assets/images/gb_1.png"},{type:"image",name:"gb_2",src:"./assets/images/gb_2.png"},{type:"image",name:"gb_3",src:"./assets/images/gb_3.png"},{type:"image",name:"gb_4",src:"./assets/images/gb_4.png"},{type:"image",name:"enemy",src:"./assets/images/enemy.png"},{type:"image",name:"gb_5",src:"./assets/images/gb_5.png"},{type:"image",name:"gb_6",src:"./assets/images/gb_6.png"},{type:"image",name:"speech_bubble",src:"./assets/images/speech_bubble.png"},{type:"image",name:"attack_gauge",src:"./assets/images/attack_gauge.png"},{type:"image",name:"attack_bar_0",src:"./assets/images/attack_bar_0.png"},{type:"image",name:"attack_bar_1",src:"./assets/images/attack_bar_1.png"},{type:"image",name:"slash_0",src:"./assets/images/slash_0.png"},{type:"image",name:"slash_1",src:"./assets/images/slash_1.png"},{type:"image",name:"slash_2",src:"./assets/images/slash_2.png"},{type:"image",name:"slash_3",src:"./assets/images/slash_3.png"},{type:"image",name:"slash_4",src:"./assets/images/slash_4.png"},{type:"image",name:"slash_5",src:"./assets/images/slash_5.png"},{type:"audio",name:"damage",src:"./assets/audios/p_damage.wav"},{type:"audio",name:"heartbreak_1",src:"./assets/audios/heartbreak_1.wav"},{type:"audio",name:"heartbreak_2",src:"./assets/audios/heartbreak_2.wav"},{type:"audio",name:"gb_charge",src:"./assets/audios/gb_charge.wav"},{type:"audio",name:"gb_fire",src:"./assets/audios/gb_fire.wav"},{type:"audio",name:"cursor_move",src:"./assets/audios/cursor_move.wav"},{type:"audio",name:"cursor_confirm",src:"./assets/audios/cursor_confirm.wav"},{type:"audio",name:"talk_default",src:"./assets/audios/talk_default.wav"},{type:"audio",name:"text",src:"./assets/audios/text.wav"},{type:"audio",name:"heal",src:"./assets/audios/heal.wav"},{type:"audio",name:"slash",src:"./assets/audios/slash.wav"}],K=async t=>{const i={},d={},w={},n=A,s=[];return n.forEach(l=>s.push(new Promise(a=>{switch(l.type){case"image":{const h=new Image;h.src=l.src,h.onload=()=>{i[l.name]=h,a()}}break;case"audio":{const h=new Audio(l.src);h.autoplay=!1,h.muted=!0,h.addEventListener("loadeddata",()=>{h.muted=!1,(async()=>{const p=await(await fetch(l.src)).arrayBuffer();d[l.name]={ctx:await t.decodeAudioData(p),data:h,time:1/0},h.onload=()=>a()})().then(a)})}break;case"font":(async()=>{const p=await(await(await fetch(l.src)).text()).match(/url\(.+?\)/g);if(!p)throw new Error("フォントが見つかりませんでした");const e=[];p.forEach(o=>{e.push((async()=>{const c=new FontFace(l.name,o);await c.load(),w[l.name]=c,await document.fonts.add(c)})())}),Promise.all(e)})().then(a);break}}))),await Promise.all(s),{Images:i,Audios:d,Fonts:w}},x=t=>Math.sin(t/360*Math.PI*2),v=t=>Math.cos(t/360*Math.PI*2),R=(t,i,d,w,n,s)=>{const l=(p,e,o,c=0,g=100,y=1,m="center",f=1,u,_=!1)=>{if(_){const b=d[p],[$,k,L,M]=u===void 0?[0,0,b.width,b.height]:[u.left,u.top,u.width,u.height];switch(i.globalAlpha=y,m){case"center":i.save(),i.translate(e*n.display_quality,-o*n.display_quality+t.height),i.rotate(c*Math.PI/180),i.drawImage(b,$,k,L,M,-L*f*g/200*n.display_quality,-M*g/200*n.display_quality,L*f*g/100*n.display_quality,M*g/100*n.display_quality),i.restore();break;case"start":i.save(),i.translate(e*n.display_quality,-o*n.display_quality+t.height),i.rotate(c*Math.PI/180),i.drawImage(b,$,k,L,M,0,0,L*f*g/100*n.display_quality,M*g/100*n.display_quality),i.restore()}}else{const b=(v(s.d)*e-x(s.d)*o+s.x)*s.size/100,$=(x(s.d)*e+v(s.d)*o+s.y)*s.size/100,k=c+s.d;l(p,b,$,k,g*s.size/100,y,m,f,u,!0)}};return{stamp:l,drawRect:(p,e,o,c,g,y=0,m,f="center")=>{switch(i.globalAlpha=m===void 0?1:m,i.save(),f){case"center++":i.translate(p*n.display_quality,-e*n.display_quality+t.height),i.rotate(y*Math.PI/180),i.beginPath(),i.rect(-o/2*n.display_quality,-c/2*n.display_quality,o*n.display_quality,c*n.display_quality);break;case"center":i.translate((p-o/2)*n.display_quality,-(e-c/2)*n.display_quality+t.height),i.rotate(y*Math.PI/180),i.beginPath(),i.rect(0,0,o*n.display_quality,-c*n.display_quality);break;case"start":default:i.translate(p*n.display_quality,-e*n.display_quality+t.height),i.rotate(y*Math.PI/180),i.beginPath(),i.rect(0,0,o*n.display_quality,-c*n.display_quality);break}i.fillStyle=g,i.fill(),i.restore()},drawLine:(p,e,o,c,g,y,m=0)=>{switch(i.globalAlpha=1,i.beginPath(),m){case 0:i.moveTo((p-c*Math.sin(o)/2)*n.display_quality,-(e+c*Math.cos(o)/2)*n.display_quality+t.height),i.lineTo((p+c*Math.sin(o)/2)*n.display_quality,-(e-c*Math.cos(o)/2)*n.display_quality+t.height);break;case 1:i.moveTo(p*n.display_quality,-e*n.display_quality+t.height),i.lineTo((p+c*Math.sin(o))*n.display_quality,-(e-c*Math.cos(o))*n.display_quality+t.height);break}i.strokeStyle=y,i.lineWidth=g*n.display_quality,i.stroke()},drawText:(p,e,o,c,g,y="serif",m="left")=>{i.globalAlpha=1;const[f,u]=[e*n.display_quality,-o*n.display_quality+t.height];i.font=`${c*n.display_quality}px ${y}`,i.textAlign=m,i.fillStyle=g,i.fillText(p,f,u)}}},D=t=>{class i{constructor(w,n,s=0,l=100,a="",h=0,r=1,p){this.x=w,this.y=n,this.d=s,this.size=l,this.costume=a,this.alpha=h,this.width=r,this.act_=p}stamp(){this.alpha!=0&&t.stamp(this.costume,this.x,this.y,this.d,this.size,this.alpha,"center",this.width)}move(w){this.x+=x(this.d)*w,this.y+=v(this.d)*w}act(){(this.act_||(()=>{}))(this)}}return i},F=(t,i,d)=>({raw_to_stage:(n,s,l=0)=>{const a=t.getBoundingClientRect(),h=((n-a.left)/d.size*100-d.x)*i.stage_width/i.display_width,r=(i.display_height-((s-a.top)/d.size*100-d.y))*i.stage_height/i.display_height,p=l+d.d;return{x:h,y:r,d:p}}}),I=t=>{const i=new(window.AudioContext||window.webkitAudioContext);return{play:(n,s=0,l=1)=>{if(s<=t[n].time){const a=i.createGain(),h=i.createBufferSource();h.buffer=t[n].ctx,a.gain.setValueAtTime(l,i.currentTime),h.connect(a),a.connect(i.destination),h.start(0),t[n].time=0}},tick:()=>{for(const n in t)t[n].time++}}},S=async t=>{const i=document.getElementById(t.canvas_name);i.height=t.stage_height*t.display_quality,i.width=t.stage_width*t.display_quality;const d=i.getContext("2d"),w=new(window.AudioContext||window.webkitAudioContext),{Images:n,Audios:s,Fonts:l}=await K(w),a={up:!1,down:!1,left:!1,right:!1,z:!1,x:!1,c:!1,d:!1,f:{up:!1,down:!1,left:!1,right:!1,z:!1,x:!1,c:!1,d:!1}},h={x:0,y:0,clicking:!1,is_in_rect(_,b,$,k,L="center"){switch(L){case"center":return _-$/2<this.x&&this.x<_+$/2&&b-k/2<this.y&&this.y<b+k/2;case"start":default:return _<this.x&&this.x<_+$&&b<this.y&&this.y<b+k}}},r={canvas:{size:100,x:0,y:0,d:0}},p=R(i,d,n,l,t,r.canvas),e=I(s),o=D(p);d.imageSmoothingEnabled=!1;const c=F(i,t,r.canvas);window.addEventListener("keydown",_=>{switch(_.key){case"ArrowUp":a.up=!0,a.f.up=!0;break;case"ArrowDown":a.down=!0,a.f.down=!0;break;case"ArrowLeft":a.left=!0,a.f.left=!0;break;case"ArrowRight":a.right=!0,a.f.right=!0;break;case"z":case"Z":a.z=!0,a.f.z=!0;break;case"x":case"X":a.x=!0,a.f.x=!0;break;case"c":case"C":a.c=!0,a.f.c=!0;break;case"d":case"D":a.d=!0,a.f.d=!0;break}}),window.addEventListener("keyup",_=>{switch(_.key){case"ArrowUp":a.up=!1;break;case"ArrowDown":a.down=!1;break;case"ArrowLeft":a.left=!1;break;case"ArrowRight":a.right=!1;break;case"z":case"Z":a.z=!1;break;case"x":case"X":a.x=!1;break;case"c":case"C":a.c=!1;break;case"d":case"D":a.d=!1;break}}),i.addEventListener("mousedown",_=>{h.clicking=!0;const b=c.raw_to_stage(_.x,_.y);h.x=b.x,h.y=b.y}),i.addEventListener("mousemove",_=>{const b=c.raw_to_stage(_.x,_.y);h.x=b.x,h.y=b.y}),i.addEventListener("mouseup",_=>{h.clicking=!1;const b=c.raw_to_stage(_.x,_.y);h.x=b.x,h.y=b.y});let g,y;{let _={up:!1,down:!1,left:!1,right:!1,z:!1,x:!1,c:!1,d:!1};g=()=>{["up","down","left","right","z","x","c","d"].forEach(b=>{_[b]&&(a.f[b]=!1)}),_={...a.f}},y=()=>{e.tick()}}const{frameWhile:m,frameFor:f,frameLoop:u}=P(g,y);return{canvas:i,ctx:d,Images:n,Audios:s,Fonts:l,inputKeys:a,inputMouse:h,props:r,cLib:p,aLib:e,Sprite:o,for:f,while:m,loop:u}},B=2,G=640,j=480,C=800,T=400,W="canvas",U={display_quality:B,stage_width:G,stage_height:j,display_width:C,display_height:T,canvas_name:W},V=(t,i,d,w)=>{let n={};const s=class z extends d{constructor(r,p,e,o,c,g,y,m,f,u){super(r,p,e,o,void 0,1,1),this.start_x=r,this.start_y=p,this.start_d=e,this.move_x=g,this.move_y=y,this.move_d=m,this.start_len=c,this.move_len=f,this.len=c,this.age=0,this.id=z.current_id,this.b_width=o,n[this.id]=this,z.current_id++}move_self(){this.age++,this.x=this.start_x+z.get_move(this.move_x,this.age),this.y=this.start_y+z.get_move(this.move_y,this.age),this.d=this.start_d+z.get_move(this.move_d,this.age),this.len=this.start_len+z.get_move(this.move_len,this.age)}draw(){v(this.d),t.stamp("bone_head_white",this.x+v(this.d)*this.b_width*8/6,this.y-x(this.d)*this.b_width*8/6,this.d+180,this.b_width*100/6,1,"start"),t.drawRect(this.x+x(this.d)*this.b_width*6/6,this.y+v(this.d)*this.b_width*6/6,this.b_width,this.len+this.b_width*2/6,"white",this.d,1,"start"),t.stamp("bone_head_white",this.x+x(this.d)*(this.len+this.b_width*14/6)-v(this.d)*this.b_width*2/6,this.y+v(this.d)*(this.len+this.b_width*14/6)+x(this.d)*this.b_width*2/6,this.d,this.b_width*100/6,1,"start")}judge(){{const r=w.soul.x-this.x,p=w.soul.y-this.y,e=r*v(this.d)+p*-x(this.d),o=p*v(this.d)+r*x(this.d);this.len+this.b_width*14/6>o&&o>0&&this.b_width>e&&e>0&&w.damage(1)}}static process(){for(const r in n){const p=n[r];p.move_self(),p.draw(),p.judge()}}static get_move(r,p){if(typeof r=="number")return r*p;switch(r.type){case"sin":case"cos":return x(r.cycle*p)*r.amp;case"custom":return r.fn(p)}}};s.current_id=0;let l=s;return{boneDict:n,normal:l,process:()=>{l.process()}}},X={height_basic:15,width_basic:2,name:"determination"},Y={left:10,up:34,width:6,height:9,gap:0},Z={left:20,up:34,width:6,height:9,gap:0},N={left:30,up:34,width:6,height:9,gap:0},Q={left:40,up:34,width:6,height:9,gap:0},H={left:50,up:34,width:6,height:9,gap:0},J={left:60,up:34,width:6,height:9,gap:0},O={left:70,up:34,width:6,height:9,gap:0},tt={left:80,up:34,width:6,height:9,gap:0},et={left:90,up:34,width:6,height:9,gap:0},st={left:100,up:34,width:6,height:9,gap:0},it={left:110,up:34,width:6,height:9,gap:0},at={left:120,up:34,width:6,height:9,gap:0},ht={left:130,up:34,width:7,height:9,gap:0},nt={left:140,up:34,width:6,height:9,gap:0},lt={left:150,up:34,width:6,height:9,gap:0},ot={left:0,up:50,width:6,height:9,gap:0},pt={left:10,up:50,width:6,height:9,gap:0},rt={left:20,up:50,width:6,height:9,gap:0},ct={left:30,up:50,width:6,height:9,gap:0},gt={left:40,up:50,width:6,height:9,gap:0},dt={left:50,up:50,width:6,height:9,gap:0},ut={left:60,up:50,width:6,height:9,gap:0},wt={left:70,up:50,width:7,height:9,gap:0},_t={left:80,up:50,width:6,height:9,gap:0},ft={left:90,up:50,width:6,height:9,gap:0},mt={left:100,up:50,width:6,height:9,gap:0},yt={left:10,up:68,width:6,height:7,gap:2},bt={left:20,up:66,width:6,height:9,gap:0},xt={left:30,up:68,width:6,height:7,gap:2},vt={left:40,up:66,width:6,height:9,gap:0},kt={left:50,up:68,width:6,height:7,gap:2},$t={left:60,up:66,width:6,height:9,gap:0},Lt={left:70,up:68,width:6,height:10,gap:2},Mt={left:80,up:66,width:6,height:9,gap:0},qt={left:90,up:65,width:6,height:10,gap:-1},zt={left:100,up:65,width:6,height:13,gap:2},Et={left:110,up:66,width:6,height:9,gap:0},Pt={left:120,up:66,width:6,height:9,gap:0},At={left:130,up:68,width:7,height:7,gap:2},Kt={left:140,up:68,width:6,height:7,gap:2},Rt={left:150,up:68,width:6,height:7,gap:2},Dt={left:0,up:84,width:6,height:10,gap:2},Ft={left:10,up:84,width:6,height:10,gap:2},It={left:20,up:84,width:6,height:7,gap:2},St={left:30,up:84,width:6,height:7,gap:2},Bt={left:40,up:82,width:6,height:9,gap:0},Gt={left:50,up:84,width:6,height:7,gap:2},jt={left:60,up:84,width:6,height:7,gap:2},Ct={left:70,up:84,width:7,height:7,gap:2},Tt={left:80,up:84,width:6,height:7,gap:2},Wt={left:90,up:84,width:6,height:10,gap:2},Ut={left:100,up:84,width:6,height:7,gap:2},Vt={left:0,up:0,width:6,height:1,gap:0},Xt={left:150,up:82,width:6,height:9,gap:0},Yt={left:40,up:0,width:6,height:13,gap:0},Zt={left:150,up:61,width:4,height:1,gap:8},Nt={0:{left:0,up:18,width:6,height:9,gap:0},1:{left:10,up:18,width:6,height:9,gap:0},2:{left:20,up:18,width:6,height:9,gap:0},3:{left:30,up:18,width:6,height:9,gap:0},4:{left:40,up:18,width:6,height:9,gap:0},5:{left:50,up:18,width:6,height:9,gap:0},6:{left:60,up:18,width:6,height:9,gap:0},7:{left:70,up:18,width:6,height:9,gap:0},8:{left:80,up:18,width:6,height:9,gap:0},9:{left:90,up:18,width:6,height:9,gap:0},props:X,A:Y,B:Z,C:N,D:Q,E:H,F:J,G:O,H:tt,I:et,J:st,K:it,L:at,M:ht,N:nt,O:lt,P:ot,Q:pt,R:rt,S:ct,T:gt,U:dt,V:ut,W:wt,X:_t,Y:ft,Z:mt,a:yt,b:bt,c:xt,d:vt,e:kt,f:$t,g:Lt,h:Mt,i:qt,j:zt,k:Et,l:Pt,m:At,n:Kt,o:Rt,p:Dt,q:Ft,r:It,s:St,t:Bt,u:Gt,v:jt,w:Ct,x:Tt,y:Wt,z:Ut,space:Vt,irregular:Xt,"!":{left:10,up:1,width:4,height:10,gap:-1},'"':{left:20,up:2,width:5,height:4,gap:-5},"#":{left:30,up:2,width:7,height:9,gap:0},$:Yt,"%":{left:50,up:2,width:7,height:9,gap:0},"&":{left:60,up:2,width:7,height:9,gap:0},"'":{left:70,up:2,width:2,height:4,gap:0},"(":{left:80,up:2,width:4,height:9,gap:0},")":{left:90,up:2,width:4,height:9,gap:0},"*":{left:100,up:4,width:8,height:5,gap:3},"+":{left:110,up:4,width:6,height:5,gap:0},",":{left:120,up:9,width:2,height:4,gap:7},"-":{left:130,up:6,width:5,height:1,gap:0},".":{left:140,up:9,width:2,height:2,gap:7},"/":{left:150,up:2,width:6,height:10,gap:1},":":{left:100,up:20,width:2,height:7,gap:2},";":{left:110,up:20,width:2,height:9,gap:4},"<":{left:120,up:18,width:5,height:9,gap:0},"=":{left:130,up:21,width:5,height:3,gap:0},">":{left:140,up:18,width:5,height:9,gap:0},"?":{left:150,up:18,width:6,height:9,gap:0},"@":{left:0,up:34,width:6,height:9,gap:0},"[":{left:110,up:50,width:4,height:9,gap:0},"\\":{left:120,up:50,width:6,height:10,gap:1},"]":{left:130,up:50,width:4,height:9,gap:0},"^":{left:140,up:49,width:6,height:4,gap:-5},_:Zt,"`":{left:10,up:68,width:3,height:2,gap:2},"{":{left:110,up:82,width:5,height:9,gap:0},"|":{left:120,up:82,width:2,height:9,gap:0},"}":{left:130,up:82,width:5,height:9,gap:0},"~":{left:140,up:85,width:7,height:2,gap:-1}},Qt={height_basic:6,width_basic:1,name:"status"},Ht={left:6,up:14,width:4,height:5,gap:0},Jt={left:12,up:14,width:4,height:5,gap:0},Ot={left:18,up:14,width:4,height:5,gap:0},te={left:24,up:14,width:4,height:5,gap:0},ee={left:30,up:14,width:4,height:5,gap:0},se={left:36,up:14,width:4,height:5,gap:0},ie={left:42,up:14,width:4,height:5,gap:0},ae={left:48,up:14,width:4,height:5,gap:0},he={left:54,up:14,width:4,height:5,gap:0},ne={left:60,up:14,width:4,height:5,gap:0},le={left:66,up:14,width:4,height:5,gap:0},oe={left:72,up:14,width:4,height:5,gap:0},pe={left:78,up:14,width:5,height:5,gap:0},re={left:84,up:14,width:4,height:5,gap:0},ce={left:90,up:14,width:4,height:5,gap:0},ge={left:0,up:21,width:4,height:5,gap:0},de={left:6,up:21,width:4,height:5,gap:0},ue={left:12,up:21,width:4,height:5,gap:0},we={left:18,up:21,width:4,height:5,gap:0},_e={left:24,up:21,width:4,height:5,gap:0},fe={left:30,up:21,width:4,height:5,gap:0},me={left:36,up:21,width:4,height:5,gap:0},ye={left:42,up:21,width:5,height:5,gap:0},be={left:48,up:21,width:4,height:5,gap:0},xe={left:54,up:21,width:4,height:5,gap:0},ve={left:60,up:21,width:4,height:5,gap:0},ke={left:6,up:28,width:4,height:5,gap:0},$e={left:12,up:28,width:4,height:5,gap:0},Le={left:18,up:28,width:4,height:5,gap:0},Me={left:24,up:28,width:4,height:5,gap:0},qe={left:30,up:28,width:4,height:5,gap:0},ze={left:36,up:28,width:4,height:5,gap:0},Ee={left:42,up:28,width:4,height:5,gap:0},Pe={left:48,up:28,width:4,height:5,gap:0},Ae={left:54,up:28,width:4,height:5,gap:0},Ke={left:60,up:28,width:4,height:5,gap:0},Re={left:66,up:28,width:4,height:5,gap:0},De={left:72,up:28,width:4,height:5,gap:0},Fe={left:78,up:28,width:5,height:5,gap:0},Ie={left:84,up:28,width:4,height:5,gap:0},Se={left:90,up:28,width:4,height:5,gap:0},Be={left:0,up:35,width:4,height:5,gap:0},Ge={left:6,up:35,width:4,height:5,gap:0},je={left:12,up:35,width:4,height:5,gap:0},Ce={left:18,up:35,width:4,height:5,gap:0},Te={left:24,up:35,width:4,height:5,gap:0},We={left:30,up:35,width:4,height:5,gap:0},Ue={left:36,up:35,width:4,height:5,gap:0},Ve={left:42,up:35,width:5,height:5,gap:0},Xe={left:48,up:35,width:4,height:5,gap:0},Ye={left:54,up:35,width:4,height:5,gap:0},Ze={left:60,up:35,width:4,height:5,gap:0},Ne={left:0,up:0,width:4,height:1,gap:0},Qe={left:90,up:35,width:4,height:5,gap:0},He={left:24,up:0,width:5,height:5,gap:0},Je={left:90,up:25,width:4,height:1,gap:4},Oe={0:{left:0,up:7,width:4,height:5,gap:0},1:{left:6,up:7,width:4,height:5,gap:0},2:{left:12,up:7,width:4,height:5,gap:0},3:{left:18,up:7,width:4,height:5,gap:0},4:{left:24,up:7,width:4,height:5,gap:0},5:{left:30,up:7,width:4,height:5,gap:0},6:{left:36,up:7,width:4,height:5,gap:0},7:{left:42,up:7,width:4,height:5,gap:0},8:{left:48,up:7,width:4,height:5,gap:0},9:{left:54,up:7,width:4,height:5,gap:0},props:Qt,A:Ht,B:Jt,C:Ot,D:te,E:ee,F:se,G:ie,H:ae,I:he,J:ne,K:le,L:oe,M:pe,N:re,O:ce,P:ge,Q:de,R:ue,S:we,T:_e,U:fe,V:me,W:ye,X:be,Y:xe,Z:ve,a:ke,b:$e,c:Le,d:Me,e:qe,f:ze,g:Ee,h:Pe,i:Ae,j:Ke,k:Re,l:De,m:Fe,n:Ie,o:Se,p:Be,q:Ge,r:je,s:Ce,t:Te,u:We,v:Ue,w:Ve,x:Xe,y:Ye,z:Ze,space:Ne,irregular:Qe,"!":{left:6,up:0,width:4,height:5,gap:0},'"':{left:12,up:0,width:3,height:2,gap:0},"#":{left:18,up:0,width:5,height:5,gap:0},$:He,"%":{left:30,up:1,width:4,height:4,gap:1},"&":{left:36,up:0,width:5,height:5,gap:0},"'":{left:42,up:0,width:1,height:2,gap:-3},"(":{left:48,up:0,width:3,height:5,gap:0},")":{left:54,up:0,width:3,height:5,gap:0},"*":{left:60,up:0,width:5,height:5,gap:0},"+":{left:66,up:0,width:5,height:5,gap:0},",":{left:72,up:3,width:1,height:2,gap:3},"-":{left:78,up:2,width:5,height:1,gap:0},".":{left:84,up:4,width:1,height:1,gap:4},"/":{left:90,up:1,width:4,height:4,gap:1},":":{left:60,up:8,width:1,height:3,gap:0},";":{left:66,up:8,width:1,height:4,gap:1},"<":{left:72,up:7,width:3,height:5,gap:0},"=":{left:78,up:8,width:5,height:3,gap:0},">":{left:84,up:7,width:3,height:5,gap:0},"?":{left:90,up:7,width:4,height:5,gap:0},"@":{left:0,up:14,width:4,height:5,gap:0},"[":{left:66,up:21,width:4,height:5,gap:0},"\\":{left:72,up:22,width:4,height:4,gap:1},"]":{left:78,up:21,width:4,height:5,gap:0},"^":{left:84,up:21,width:5,height:3,gap:-1},_:Je,"`":{left:0,up:27,width:1,height:2,gap:-5},"{":{left:66,up:35,width:3,height:5,gap:0},"|":{left:72,up:35,width:1,height:5,gap:0},"}":{left:78,up:35,width:3,height:5,gap:0},"~":{left:84,up:35,width:4,height:2,gap:-3}},ts=(t,i,d)=>{const w={en:Nt,status:Oe};let n=0,s={};class l{constructor(o){this.name=o}delete(){delete s[this.name]}}class a extends l{constructor(o,c,g,y,m,f,u){super(o),this._={all_str:u.reduce((_,b)=>_+b.str,""),now:[{str:"",color:u[0].color,spacing_x:u[0].spacing_x,spacing_y:u[0].spacing_y}],len_allow:0,count:0,current_char:0,current_char_true:0},this.x=c,this.y=g,this.direction=y,this.size=m,this.data=u,this.font=(_=>{switch(_){case"status":return w.status;default:return w.en}})(f),s[o=="_"?`auto$${n++}`:o]=this,this.process()}write(){const o=this.size,c=this.direction*Math.PI/180,g=this._.now.reduce((_,b)=>_+b.str.length,0);let y=0,m=0,f=0;const u=_=>_ in this.font?this.font[_]:this.font.space;return this._.now.forEach(_=>{_.str.split("").forEach($=>{const k=u($);$==`
`?(y=0,m+=this.font.props.height_basic+_.spacing_y):(t.stamp(this.font.props.name+"_"+_.color,this.x+(Math.cos(c)*y-Math.sin(c)*(m+k.gap/2))*o/100,this.y+(Math.sin(c)*y+Math.cos(c)*(m+k.gap/2))*o/100,this.direction,o,1,"start",1,{left:k.left,top:k.up,width:k.width,height:k.height}),f+1<g&&(y+=k.width+this.font.props.width_basic+_.spacing_x)),f++})}),this}process(){const o=this.data.reduce((c,g)=>c+g.str.length,0);if(this._.len_allow==o&&d.z){delete s[this.name];return}else d.x?(this._.len_allow=o,this._.current_char=o):this._.len_allow<o&&(this._.len_allow+=1/this.data[this._.count].speed,this._.current_char+=1/this.data[this._.count].speed);for(;this._.current_char_true<Math.min(this._.len_allow,o);)for(this._.now[this._.count].str+=this.data[this._.count].str[this._.now[this._.count].str.length],this._.current_char_true++;this.data[this._.count].str.length<=this._.now[this._.count].str.length&&this._.count+1<this.data.length;)this._.count++,this._.now.push({str:"",color:this.data[this._.count].color===void 0?"white":this.data[this._.count].color,spacing_x:this.data[this._.count].spacing_x,spacing_y:this.data[this._.count].spacing_y}),this._.current_char-=this.data[this._.count].str.length}}class h extends l{constructor(o,c,g,y,m,f,u,_,b,$,k="en",L){super(o),this.str_now="",this.len_now=0,this.str=c,this.x=g,this.y=y,this.direction=m,this.size=f,this.color=u,this.spacing_x=_,this.spacing_y=b,this.speed=$,this.font=(M=>{switch(M){case"status":return w.status;default:return w.en}})(k),this.len_allow=0,s[o=="_"?`auto$${n++}`:o]=this,this.voice=L,this.resolve=()=>{},this.promise=(()=>new Promise(M=>{this.resolve=M}))(),this.solved=!1,this.process()}write(){const o=this.str_now,c=this.size,g=this.direction*Math.PI/180;let y,m;[y,m]=[0,0];const f=u=>u in this.font?this.font[u]:this.font.space;for(let u=0;u<o.length;u++){const _=f(o[u]);o[u]==`
`?(y=0,m-=this.font.props.height_basic+this.spacing_y):(t.stamp(this.font.props.name+"_"+(this.color?this.color:"white"),this.x+(Math.cos(g)*y-Math.sin(g)*(m-_.gap))*c/100,this.y+(Math.sin(g)*y+Math.cos(g)*(m-_.gap))*c/100,this.direction,c,1,"start",1,{left:_.left,top:_.up,width:_.width,height:_.height}),u+1<o.length&&(y+=_.width+this.font.props.width_basic+this.spacing_x))}return this}process(){if(this.str.length<=this.len_allow&&d.z?(this.resolve(),this.solved=!0,delete s[this.name]):d.x?this.len_allow=this.str.length:this.len_allow<this.str.length&&(this.len_allow+=1/this.speed),this.str_now.length<Math.min(this.len_allow,this.str.length)){let o=!1;for(;this.str_now.length<Math.min(this.len_allow,this.str.length);)this.str_now+=this.str[this.str_now.length],o=o||this.str[this.str_now.length]!==" ";this.voice&&o&&i.play(this.voice)}}}return{write:(e,o,c,g,y,m="white",f=0,u=0,_="en")=>{const b=new h("_",e,o,c,g,y,m,f,u,0,_);b.write(),b.delete()},Super:a,Plane:h,process:()=>{for(const e in s)s[e].process()},dict:s}},es=(t,i)=>{class d{constructor(l,a,h,r,p,e,o=4){this.dx=l,this.dy=a,this.dd=h,this.len=r,this.align=p,this.width=o,this.soul_size=6,this.relative=e||(()=>{const c=this.dd,g=i.x-this.dx;return(i.y-this.dy)*v(c)+g*x(c)>0?"plus":"minus"})()}judge(){const l=this.dd,a=i.x-this.dx,h=i.y-this.dy,r=a*v(l)+h*-x(l),p=h*v(l)+a*x(l);if(this.len/2>r&&r>-this.len/2){if(this.relative=="minus"&&p>-(this.width/2+this.soul_size)||this.relative=="plus"&&this.width/2+this.soul_size>p){const e=r*v(-l)+(this.width/2+this.soul_size)*(this.relative=="minus"?1:-1)*x(-l),o=(this.width/2+this.soul_size)*(this.relative=="minus"?1:-1)*-v(-l)+r*x(-l);i.x=e+this.dx,i.y=o+this.dy}}else p>0?this.relative="plus":this.relative="minus"}draw(){t.drawRect(this.dx,this.dy,this.len,this.width,"white",this.dd,1,"center++")}}class w{constructor(l,a,h,r=4){this.dx=l,this.dy=a,this.dd=h,this.width=r}judge(){const l=this.dd,a=i.x-this.dx,h=i.y-this.dy,r=a*v(l)+h*-x(l);if(h*v(l)+a*x(l)>-this.width){const e=r*v(-l)+this.width*x(-l),o=this.width*-v(-l)+r*x(-l);i.x=e+this.dx,i.y=o+this.dy}}draw(){const l=this.dx+320*x(this.dd),a=this.dy+320*v(this.dd);t.drawRect(l,a,640,640,"#ffffff88",this.dd,1,"center++")}}const n={center_x:320,center_y:240,dire:0,width:100,height:100,thickness:5,walls:[],default(){this.center_x=320,this.center_y=240,this.dire=0,this.width=100,this.height=100,this.walls=[],n.init()},set(s,l,a,h,r){this.center_x=s||this.center_x,this.center_y=l||this.center_y,this.dire=a||this.dire,this.width=h||this.width,this.height=r||this.height,n.update()},draw(){this.walls.forEach(s=>{const l=s.dx+640*x(s.dd),a=s.dy+640*v(s.dd);t.drawRect(l,a,1280,1280,"#ffffff",s.dd,1,"center++")}),this.walls.forEach(s=>{const l=s.dx+640*x(s.dd),a=s.dy+640*v(s.dd);t.drawRect(l,a,1280-s.width*2,1280-s.width*2,"#000000",s.dd,1,"center++")})},judge(){this.walls.forEach(s=>{s.judge()})},update(){{const s=this.dire,l=this.center_x,a=this.center_y,h=this.walls[0];h.dd=s,h.dx=l+this.height/2*x(s),h.dy=a+this.height/2*v(s)}{const s=this.dire+90,l=this.center_x,a=this.center_y,h=this.walls[1];h.dd=s,h.dx=l+this.width/2*x(s),h.dy=a+this.width/2*v(s)}{const s=this.dire+180,l=this.center_x,a=this.center_y,h=this.walls[2];h.dd=s,h.dx=l+this.height/2*x(s),h.dy=a+this.height/2*v(s)}{const s=this.dire+270,l=this.center_x,a=this.center_y,h=this.walls[3];h.dd=s,h.dx=l+this.width/2*x(s),h.dy=a+this.width/2*v(s)}},init(){this.walls.push(new w(0,0,0,this.thickness)),this.walls.push(new w(0,0,90,this.thickness)),this.walls.push(new w(0,0,180,this.thickness)),this.walls.push(new w(0,0,270,this.thickness))}};return n.init(),{Wall:d,box:n}},ss=(t,i,d,w)=>{let n={};const s=class E extends d{constructor(r,p,e,o,c,g,y,m,f,u,_){super(o,c,g,y,"gb_1",1,m),this.s_x=o,this.s_y=c,this.s_d=g,this.t_x=r,this.t_y=p,this.t_d=e,this.c_t=f,this.b_s=u,this.b_d=_,this.gb_width=m,this.age=0,this.id=E.current_id,n[this.id]=this,E.current_id++,i.play("gb_charge",1)}move_self(){if(this.age<this.c_t){let r=(this.c_t-this.age)**4/this.c_t**4;this.x=r*this.s_x+(1-r)*this.t_x,this.y=r*this.s_y+(1-r)*this.t_y,this.d=r*this.s_d+(1-r)*this.t_d}else this.age==this.c_t&&(this.x=this.t_x,this.y=this.t_y,this.d=this.t_d);if(this.b_s+this.c_t<=this.age&&-640<this.x&&this.x<640&&-640<this.y&&this.y<640){let r=(this.age-(this.b_s+this.c_t))**2;this.x=this.t_x,this.y=this.t_y,this.move(r/2)}}draw(){this.b_s+this.c_t<this.age&&t.drawRect(this.x+x(this.d)*4800/-2,this.y+v(this.d)*4800/-2,this.width*this.size/5*(1+x(this.age*10)*.2),4800,"white",this.d+180,Math.min((this.b_d+this.b_s+this.c_t-this.age)/15,1),"center++"),this.age==this.b_s+this.c_t-2&&(this.costume="gb_2"),this.age==this.b_s+this.c_t-1&&(this.costume="gb_3"),this.age==this.b_s+this.c_t&&(this.costume="gb_4"),this.b_s+this.c_t<this.age&&(this.costume=`gb_${(this.age-(this.b_s+this.c_t))%2+5}`),this.stamp()}judge(){{const r=w.soul.x-this.x,p=w.soul.y-this.y,e=r*v(this.d)+p*-x(this.d),o=p*v(this.d)+r*x(this.d);this.b_s+this.c_t<=this.age&&0>o&&this.gb_width*this.size/10>e&&e>-this.gb_width*this.size/10&&w.damage(1)}}static process(){for(const r in n){const p=n[r];p.move_self(),p.draw(),p.judge(),p.age++,p.b_d+p.b_s==p.age&&i.play("gb_fire",1),p.b_d+p.b_s+p.c_t<=p.age&&delete n[r]}}};s.current_id=0;let l=s;return{gbDict:n,gb:l,process:()=>{l.process()}}},q={enemy_name:"dummy",items:[{name:"test_food",heal:99,text:"You ate a test.",behavior:"default"}],enemy_speak:[`Lorem Ipsum dolor sit
amet.`],enemy_attack:[300],actions:[{name:"check",text:`Dummy 0 ATK 0 DEF
test enemy.`}]},is=async()=>{const t=await S(U);let[i,d]=["menu","command"];const w=ts(t.cLib,t.aLib,t.inputKeys);{let l=0;await t.while(()=>i==="menu",()=>{t.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),t.inputKeys.f.up&&(l--,t.aLib.play("cursor_move")),t.inputKeys.f.down&&(l++,t.aLib.play("cursor_move")),t.cLib.stamp("soul",220,-l*50+240);const a=new w.Plane("_","play",270,250,0,200,"yellow",0,0,0,"en");a.write(),a.delete(),t.inputKeys.f.z&&(i="battle",t.aLib.play("cursor_confirm"))})}let n=0;const s={lv:1,hp:20,hp_max:20,soul:new t.Sprite(320,240,0,80,"soul",1,1),damage(l){this.hp-=l,t.aLib.play("damage",2),this.hp<=0&&(i="game_over")}};{n=0,ss(t.cLib,t.aLib,t.Sprite,s);const l=V(t.cLib,t.aLib,t.Sprite,s),h=es(t.cLib,s.soul).box,r=as(t.cLib,w.Plane,s);h.set(320,160,0,562,132);const p=new t.Sprite(310,300,0,200,"enemy",1);for(;i=="battle";)if(d=="command"){let e=[];const o=new w.Plane("_",`You feel like you're going to
have a bad time.`,80,205,0,200,"white",0,0,1,"en","text");let c=0,g;await t.while(()=>d=="command"&&i=="battle"&&d=="command",()=>{t.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),h.draw(),p.stamp();const y=(m,f,u,_)=>t.cLib.stamp("commands",m,f,0,100,1,"center",1,{left:_?113:0,top:45*u,width:112,height:44});if([0,1,2,3].forEach(m=>y(320+(m-1.5)*155,27,m,c==m&&e.length==0)),r(),e.length==0)t.inputKeys.f.right&&(c=(c+1+4)%4,t.aLib.play("cursor_move")),t.inputKeys.f.left&&(c=(c-1+4)%4,t.aLib.play("cursor_move")),t.inputKeys.f.z&&(e.push(c),t.aLib.play("cursor_confirm"),c==2&&e.push(0),c==3&&e.push(0)),o.process(),o.write(),w.write("*",50,205,0,200),[s.soul.x,s.soul.y]=[282+(c-1.5)*155,27];else if(e.length==1)t.inputKeys.f.x&&(e.pop(),t.aLib.play("cursor_move")),t.inputKeys.f.z&&(e.push(0),t.aLib.play("cursor_confirm")),(e[0]==0||e[0]==1)&&(w.write(`${q.enemy_name}`,80,205,0,200),[s.soul.x,s.soul.y]=[55,195]);else if(e.length==2){const m=f=>{t.inputKeys.f.up&&(e[1]-=2,t.aLib.play("cursor_move")),t.inputKeys.f.down&&(e[1]+=2,t.aLib.play("cursor_move")),t.inputKeys.f.right&&(e[1]+=1,t.aLib.play("cursor_move")),t.inputKeys.f.left&&(e[1]-=1,t.aLib.play("cursor_move")),e[1]=Math.max(Math.min(e[1],7,f.length-1),0),[s.soul.x,s.soul.y]=[55+e[1]%2*281,195-Math.floor(e[1]%4/2)*40],e[1]<4?[0,1,2,3].forEach(u=>{u<f.length&&(u!=e[1]&&w.write("*",50+u%2*281,205-Math.floor(u%4/2)*40,0,200),w.write(`${f[u].name}`,80+u%2*281,205-Math.floor(u%4/2)*40,0,200))}):[4,5,6,7].forEach(u=>{u<f.length&&(u!=e[1]&&w.write("*",50+u%2*281,205-Math.floor(u%4/2)*40,0,200),w.write(`${f[u].name}`,80+u%2*281,205-Math.floor(u%4/2)*40,0,200))}),4<=f.length&&w.write(`PAGE ${e[1]<4?1:2}`,361,125,0,200)};if(e[0]!=0&&t.inputKeys.f.x&&(e[0]==1||e.pop(),e.pop(),t.aLib.play("cursor_move")),e[0]==0)s.soul.alpha=0,e[1]++,t.cLib.stamp("attack_gauge",320,160,0,300),t.cLib.stamp(`attack_bar_${Math.floor(e[1]/8%2)}`,80+e[1]*5,160,0,300),t.inputKeys.f.z&&(e.push(0),t.aLib.play("slash"));else if(e[0]==1&&e.length==2)m(q.actions),t.inputKeys.f.z&&e.push(0);else if(e[0]==2){if(m(q.items),t.inputKeys.f.z){e.push(0);const f=q.items[e[1]].behavior;f=="default"?(s.hp=Math.min(s.hp_max,s.hp+q.items[e[1]].heal),t.aLib.play("heal")):f()}}else e[0]==3&&((t.inputKeys.f.up||t.inputKeys.f.down)&&(e[1]=(e[1]+1)%2,t.aLib.play("cursor_move")),t.inputKeys.f.z&&(d="enemy_speak"),[0,1].forEach(f=>{f!=e[1]&&w.write("*",50,205-f*40,0,200),w.write(`${["Spare","Quit"][f]}`,80,205-f*40,0,200)}),[s.soul.x,s.soul.y]=[55,195-e[1]*40])}else e.length==3&&(s.soul.alpha=0,e[0]==0?(s.soul.alpha=0,e[2]++,t.cLib.stamp("attack_gauge",320,160,0,300),t.cLib.stamp(`attack_bar_${Math.floor((e[1]+e[2])/4%2)}`,80+e[1]*5,160,0,300),t.cLib.stamp(`slash_${Math.floor(e[2]/8)%6}`,320,300,0,200)):e[0]==1?(g===void 0?g=new w.Plane("_",`${q.actions[e[1]].text}`,80,205,0,200,"white",0,0,1,"en","text"):g.process(),g.solved?d="enemy_speak":(g.write(),w.write("*",50,205,0,200))):e[0]==2&&(g===void 0?g=new w.Plane("_",`${q.items[e[1]].text}`,80,205,0,200,"white",0,0,1,"en","text"):g.process(),g.solved?d="enemy_speak":(g.write(),w.write("*",50,205,0,200))));s.soul.stamp()})}else if(d=="enemy_speak"){s.soul.alpha=1;let e=0;[s.soul.x,s.soul.y]=[h.center_x,h.center_y];const o=new w.Plane("_",q.enemy_speak[0],420,360,0,100,"black",0,0,1,"en","talk_default");await t.while(()=>d=="enemy_speak"&&i=="battle"&&d=="enemy_speak",()=>{e++;const c=Math.min(e/30,1);t.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),h.set(320,160,0,132*c+562*(1-c),132),h.draw(),p.stamp(),t.cLib.stamp("speech_bubble",380,380,0,150,1,"start");const g=(y,m,f,u)=>t.cLib.stamp("commands",y,m,0,100,1,"center",1,{left:u?113:0,top:45*f,width:112,height:44});[0,1,2,3].forEach(y=>g(320+(y-1.5)*155,27,y,!1)),s.soul.stamp(),r(),o.process(),o.solved&&c==1?d="enemy_attack":o.write()}),h.set(320,160,0,562,132)}else if(d=="enemy_attack")h.set(320,160,0,132,132),new l.normal(320,160,0,10,80,0,0,5,0,180),await t.for(0,e=>e<q.enemy_attack[0]&&i=="battle"&&d=="enemy_attack",e=>{const o=t.inputKeys.x?2:3.5;t.inputKeys.up&&(s.soul.y+=o),t.inputKeys.down&&(s.soul.y-=o),t.inputKeys.right&&(s.soul.x+=o),t.inputKeys.left&&(s.soul.x-=o),t.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),h.judge(),l.process(),h.draw(),p.stamp();const c=(g,y,m,f)=>t.cLib.stamp("commands",g,y,0,100,1,"center",1,{left:f?113:0,top:45*m,width:112,height:44});[0,1,2,3].forEach(g=>c(320+(g-1.5)*155,27,g,!1)),s.soul.stamp(),r()}),await t.for(0,e=>e<30&&i=="battle"&&d=="enemy_attack",e=>{const o=Math.min(e/30,1);h.set(320,160,0,562*o+132*(1-o),132),t.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),h.draw(),h.judge(),p.stamp();const c=(g,y,m,f)=>t.cLib.stamp("commands",g,y,0,100,1,"center",1,{left:f?113:0,top:45*m,width:112,height:44});[0,1,2,3].forEach(g=>c(320+(g-1.5)*155,27,g,!1)),s.soul.stamp(),r()}),h.set(320,160,0,132,132),d="command";else throw new Error}{n=0;let l=[];await t.while(()=>i==="game_over",()=>{if(t.ctx.clearRect(0,0,t.canvas.width,t.canvas.height),n==0)t.aLib.play("heartbreak_1",2);else if(n<60)t.cLib.stamp("death_0",s.soul.x,s.soul.y,0,80);else if(n==60){t.aLib.play("heartbreak_2",2);for(let a=0;a<4;a++){let h=Math.random()*12-6,r=Math.random()*8+4;l.push(new t.Sprite(s.soul.x,s.soul.y,Math.random()*360,80,`death_${a+1}`,1,1,p=>{p.x+=h,p.y+=r,p.d+=h,r-=.333,p.stamp()}))}}else 60<n&&n<180?l.forEach(a=>a.act()):n==180&&(i="waiting");n++})}},as=(t,i,d)=>()=>{const w=new i("_","chara",32,75,0,300,"white",0,0,0,"status");w.write(),w.delete();const n=new i("_","lV",134,75,0,300,"white",0,0,0,"status");n.write(),n.delete();const s=new i("_",`${("00"+d.lv).slice(-2)}`,173,75,0,300,"white",0,0,0,"status");s.write(),s.delete();const l=new i("_",`${("00"+d.hp).slice(-2)}`,d.hp_max*1.2+306,77,0,300,"white",0,0,0,"status");l.write(),l.delete();const a=new i("_","/",d.hp_max*1.2+345,77,0,300,"white",0,0,0,"status");a.write(),a.delete();const h=new i("_",`${("00"+d.hp_max).slice(-2)}`,d.hp_max*1.2+369,77,0,300,"white",0,0,0,"status");h.write(),h.delete(),t.drawRect(256,59,d.hp_max*1.2,21,"red",0,1,"start"),t.drawRect(256,59,d.hp*1.2,21,"yellow",0,1,"start"),t.stamp("hp_white",224,74,0,100,1,"start"),t.stamp("kr_white",d.hp_max*1.2+267,74,0,100,1,"start")};window.onload=is;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
